{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP4Ai4Pq4/Qxur6Wx2q9fYZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"CC6r8giv-R7G"},"outputs":[],"source":["## Support Vector Regression Implementataion"]},{"cell_type":"code","source":["## Dataset(Tips Dataset)\n","import warnings\n","warnings.filterwarnings('ignore')\n","import numpy as np\n","import pandas as pd"],"metadata":{"id":"3_rw-JrQA7lp","executionInfo":{"status":"ok","timestamp":1718104610161,"user_tz":-330,"elapsed":5,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["\n","import seaborn as sns\n","\n","df = sns.load_dataset('tips')"],"metadata":{"id":"qLAFXZ0s-biV","executionInfo":{"status":"ok","timestamp":1718104013795,"user_tz":-330,"elapsed":8,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"X4eqR4Ri-nwR","executionInfo":{"status":"ok","timestamp":1718104018087,"user_tz":-330,"elapsed":10,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"e652d97a-7264-4f50-be41-dbb076bb5343"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   total_bill   tip     sex smoker  day    time  size\n","0       16.99  1.01  Female     No  Sun  Dinner     2\n","1       10.34  1.66    Male     No  Sun  Dinner     3\n","2       21.01  3.50    Male     No  Sun  Dinner     3\n","3       23.68  3.31    Male     No  Sun  Dinner     2\n","4       24.59  3.61  Female     No  Sun  Dinner     4"],"text/html":["\n","  <div id=\"df-40c08d0e-4863-48b3-9601-e50e2279ce04\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.99</td>\n","      <td>1.01</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.34</td>\n","      <td>1.66</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.01</td>\n","      <td>3.50</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.68</td>\n","      <td>3.31</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24.59</td>\n","      <td>3.61</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40c08d0e-4863-48b3-9601-e50e2279ce04')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-40c08d0e-4863-48b3-9601-e50e2279ce04 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-40c08d0e-4863-48b3-9601-e50e2279ce04');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-591bccae-6b78-48cb-a4b1-642663fbd43d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-591bccae-6b78-48cb-a4b1-642663fbd43d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-591bccae-6b78-48cb-a4b1-642663fbd43d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 244,\n  \"fields\": [\n    {\n      \"column\": \"total_bill\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.902411954856856,\n        \"min\": 3.07,\n        \"max\": 50.81,\n        \"num_unique_values\": 229,\n        \"samples\": [\n          22.12,\n          20.23,\n          14.78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3836381890011822,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          3.35,\n          1.5,\n          6.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Sat\",\n          \"Fri\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Lunch\",\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fhojspz8-oVn","executionInfo":{"status":"ok","timestamp":1718104048740,"user_tz":-330,"elapsed":8,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"b3b0603c-7cbb-461b-be99-98666294b923"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 244 entries, 0 to 243\n","Data columns (total 7 columns):\n"," #   Column      Non-Null Count  Dtype   \n","---  ------      --------------  -----   \n"," 0   total_bill  244 non-null    float64 \n"," 1   tip         244 non-null    float64 \n"," 2   sex         244 non-null    category\n"," 3   smoker      244 non-null    category\n"," 4   day         244 non-null    category\n"," 5   time        244 non-null    category\n"," 6   size        244 non-null    int64   \n","dtypes: category(4), float64(2), int64(1)\n","memory usage: 7.4 KB\n"]}]},{"cell_type":"code","source":["df['sex'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nhdY7FYy-od5","executionInfo":{"status":"ok","timestamp":1718104074318,"user_tz":-330,"elapsed":23,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"1919daee-b4e4-469f-acd5-9b0e75a40145"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sex\n","Male      157\n","Female     87\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df['smoker'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UegwHUPr-olt","executionInfo":{"status":"ok","timestamp":1718104093241,"user_tz":-330,"elapsed":7,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"7b2fc6cc-e543-472d-819c-d8beb9c5bd9f"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["smoker\n","No     151\n","Yes     93\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df['day'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d_dUuG5d---0","executionInfo":{"status":"ok","timestamp":1718104131056,"user_tz":-330,"elapsed":12,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"8f00479d-2e32-4235-81a9-427a16bd4e65"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["day\n","Sat     87\n","Sun     76\n","Thur    62\n","Fri     19\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df['time'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GW0mjTAg-_Fe","executionInfo":{"status":"ok","timestamp":1718104146673,"user_tz":-330,"elapsed":9,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"bd898033-38a2-4d1f-82a1-c32c5315962e"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["time\n","Dinner    176\n","Lunch      68\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xey-l-dH_k9z","executionInfo":{"status":"ok","timestamp":1718104550372,"user_tz":-330,"elapsed":7,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"a4323fc4-fbb5-4c0f-e6de-14bb49f8359c"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['total_bill', 'tip', 'sex', 'smoker', 'day', 'time', 'size'], dtype='object')"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["\n","## Independent and Dependent  Features\n","\n","X = df[['tip', 'sex', 'smoker', 'day', 'time', 'size']]\n","y = df['total_bill']\n"],"metadata":{"id":"hzaUlFke_bD8","executionInfo":{"status":"ok","timestamp":1718104548866,"user_tz":-330,"elapsed":3,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["### train test split\n","\n","from sklearn.model_selection import train_test_split\n","\n","X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state = 42)\n"],"metadata":{"id":"3j3BRN9V_vDy","executionInfo":{"status":"ok","timestamp":1718104559002,"user_tz":-330,"elapsed":3,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["### Feature Encoding (Label  Encoding And Onehot Encoding )\n","\n","from sklearn.preprocessing import LabelEncoder"],"metadata":{"id":"8ewY_1jk-_LX","executionInfo":{"status":"ok","timestamp":1718104546595,"user_tz":-330,"elapsed":4,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["le1 = LabelEncoder()\n","le2 = LabelEncoder()\n","le3 = LabelEncoder()"],"metadata":{"id":"voLDTOerAUfK","executionInfo":{"status":"ok","timestamp":1718104561746,"user_tz":-330,"elapsed":7,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["X_train['sex'] = le1.fit_transform(X_train['sex'])\n","X_train['smoker'] = le2.fit_transform(X_train['smoker'])\n","X_train['day'] = le3.fit_transform(X_train['day'])\n"],"metadata":{"id":"_a7_5gagAaSg","executionInfo":{"status":"ok","timestamp":1718104580251,"user_tz":-330,"elapsed":4,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["X_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"vAFvy-B2A-tu","executionInfo":{"status":"ok","timestamp":1718104623563,"user_tz":-330,"elapsed":24,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"f194c0cb-14f6-41af-a296-4712708cf53a"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      tip  sex  smoker  day    time  size\n","228  2.72    1       0    1  Dinner     2\n","208  2.03    1       1    1  Dinner     2\n","96   4.00    1       1    0  Dinner     2\n","167  4.50    1       0    2  Dinner     4\n","84   2.03    1       0    3   Lunch     2"],"text/html":["\n","  <div id=\"df-3f208631-9dd9-4cd1-a61f-44eb045ac634\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>228</th>\n","      <td>2.72</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>208</th>\n","      <td>2.03</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>4.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>167</th>\n","      <td>4.50</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>2.03</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Lunch</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f208631-9dd9-4cd1-a61f-44eb045ac634')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f208631-9dd9-4cd1-a61f-44eb045ac634 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f208631-9dd9-4cd1-a61f-44eb045ac634');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f5bb70d7-1fbb-41e3-9c43-67980d9cf85a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5bb70d7-1fbb-41e3-9c43-67980d9cf85a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f5bb70d7-1fbb-41e3-9c43-67980d9cf85a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train","summary":"{\n  \"name\": \"X_train\",\n  \"rows\": 195,\n  \"fields\": [\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4290486919244887,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          3.06,\n          1.32,\n          2.24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Lunch\",\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["X_test['sex'] = le1.fit_transform(X_test['sex'])\n","X_test['smoker'] = le2.fit_transform(X_test['smoker'])\n","X_test['day'] = le3.fit_transform(X_test['day'])\n"],"metadata":{"id":"UtlLKEl6BGrf","executionInfo":{"status":"ok","timestamp":1718104708955,"user_tz":-330,"elapsed":15,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["X_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6kBDzq0WBWsx","executionInfo":{"status":"ok","timestamp":1718104726309,"user_tz":-330,"elapsed":10,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"16efbab9-ea43-462c-886e-2afdaaa40e7f"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      tip  sex  smoker  day    time  size\n","24   3.18    1       0    1  Dinner     2\n","6    2.00    1       0    2  Dinner     2\n","153  2.00    1       0    2  Dinner     4\n","211  5.16    1       1    1  Dinner     4\n","198  2.00    0       1    3   Lunch     2"],"text/html":["\n","  <div id=\"df-e712ad90-87a4-4f1a-96e6-72524f3ed770\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>3.18</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2.00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>2.00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>5.16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>2.00</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Lunch</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e712ad90-87a4-4f1a-96e6-72524f3ed770')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e712ad90-87a4-4f1a-96e6-72524f3ed770 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e712ad90-87a4-4f1a-96e6-72524f3ed770');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ba270116-f49c-4e99-a93e-b97749d9b131\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba270116-f49c-4e99-a93e-b97749d9b131')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ba270116-f49c-4e99-a93e-b97749d9b131 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test","summary":"{\n  \"name\": \"X_test\",\n  \"rows\": 49,\n  \"fields\": [\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1296071949868176,\n        \"min\": 1.0,\n        \"max\": 5.16,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          2.55,\n          2.45,\n          3.21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Lunch\",\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["### One - Hot Encoding --- Column Transformer\n","from sklearn.compose import ColumnTransformer\n","\n","from sklearn.preprocessing import OneHotEncoder\n"],"metadata":{"id":"j5p5x6bzBW07","executionInfo":{"status":"ok","timestamp":1718104794542,"user_tz":-330,"elapsed":532,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["ct = ColumnTransformer(transformers=[('onehot',OneHotEncoder(drop = 'first'),[3])],remainder='passthrough')\n"],"metadata":{"id":"zBfHX7SHBq3p","executionInfo":{"status":"ok","timestamp":1718104992327,"user_tz":-330,"elapsed":10,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["ct = ColumnTransformer(transformers=[('onehot',OneHotEncoder(drop = 'first'),[0,1,2])],remainder='passthrough')"],"metadata":{"id":"hwN_5RRREGUe","executionInfo":{"status":"ok","timestamp":1718105464189,"user_tz":-330,"elapsed":4,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["ct.fit_transform(X_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ldxmqVIYCMsV","executionInfo":{"status":"ok","timestamp":1718105469099,"user_tz":-330,"elapsed":16,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"fff7cc18-b9ed-4f0e-f280-87e69c25fd89"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.0, 0.0, 0.0, 40, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 26, 1, 1, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 74, 1, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 82, 1, 0, 'Dinner', 4],\n","       [0.0, 0.0, 1.0, 26, 1, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 66, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 23, 1, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 89, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 16, 1, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 41, 1, 0, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 45, 1, 1, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 88, 0, 0, 'Dinner', 5],\n","       [0.0, 1.0, 0.0, 65, 0, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 93, 1, 1, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 34, 0, 1, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 24, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 76, 0, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 28, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 0, 0, 0, 'Dinner', 1],\n","       [1.0, 0.0, 0.0, 63, 1, 1, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 64, 1, 0, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 23, 1, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 45, 1, 1, 'Dinner', 5],\n","       [0.0, 0.0, 1.0, 39, 1, 0, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 45, 0, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 45, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 45, 1, 0, 'Dinner', 4],\n","       [0.0, 1.0, 0.0, 70, 1, 1, 'Dinner', 4],\n","       [0.0, 1.0, 0.0, 84, 1, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 45, 1, 1, 'Dinner', 4],\n","       [0.0, 0.0, 1.0, 78, 0, 0, 'Lunch', 6],\n","       [0.0, 0.0, 1.0, 15, 1, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 74, 0, 0, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 54, 1, 0, 'Dinner', 3],\n","       [0.0, 0.0, 1.0, 7, 0, 0, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 45, 1, 1, 'Dinner', 4],\n","       [0.0, 1.0, 0.0, 23, 0, 0, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 34, 1, 0, 'Dinner', 4],\n","       [0.0, 1.0, 0.0, 9, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 68, 1, 0, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 80, 1, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 47, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 95, 1, 0, 'Dinner', 3],\n","       [0.0, 0.0, 1.0, 6, 1, 0, 'Lunch', 2],\n","       [0.0, 0.0, 0.0, 80, 0, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 45, 0, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 36, 0, 0, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 85, 1, 1, 'Dinner', 4],\n","       [0.0, 0.0, 1.0, 65, 0, 0, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 74, 1, 1, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 49, 1, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 35, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 73, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 45, 0, 0, 'Lunch', 3],\n","       [0.0, 0.0, 1.0, 45, 1, 0, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 33, 0, 0, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 23, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 4, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 34, 0, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 97, 1, 1, 'Dinner', 4],\n","       [0.0, 0.0, 1.0, 25, 1, 1, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 1, 0, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 65, 1, 0, 'Dinner', 3],\n","       [0.0, 0.0, 1.0, 74, 1, 0, 'Lunch', 4],\n","       [0.0, 1.0, 0.0, 86, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 34, 0, 1, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 23, 0, 0, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 11, 0, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 51, 1, 1, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 45, 1, 1, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 90, 0, 0, 'Lunch', 4],\n","       [1.0, 0.0, 0.0, 102, 1, 1, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 34, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 45, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 23, 1, 0, 'Dinner', 3],\n","       [0.0, 0.0, 1.0, 86, 0, 0, 'Lunch', 6],\n","       [1.0, 0.0, 0.0, 23, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 31, 0, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 18, 0, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 37, 0, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 23, 0, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 86, 0, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 83, 0, 0, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 23, 1, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 34, 1, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 69, 0, 0, 'Dinner', 4],\n","       [0.0, 0.0, 1.0, 34, 1, 0, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 45, 0, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 98, 1, 0, 'Lunch', 6],\n","       [0.0, 1.0, 0.0, 56, 1, 1, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 23, 1, 1, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 22, 1, 1, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 4, 0, 0, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 23, 0, 0, 'Lunch', 2],\n","       [0.0, 0.0, 0.0, 30, 1, 1, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 45, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 21, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 57, 0, 1, 'Lunch', 3],\n","       [1.0, 0.0, 0.0, 38, 1, 0, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 92, 1, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 50, 0, 1, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 32, 1, 0, 'Dinner', 3],\n","       [0.0, 0.0, 1.0, 23, 1, 0, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 100, 1, 0, 'Dinner', 4],\n","       [0.0, 1.0, 0.0, 65, 1, 1, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 74, 0, 1, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 62, 1, 0, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 86, 1, 0, 'Dinner', 3],\n","       [0.0, 0.0, 1.0, 74, 1, 1, 'Lunch', 4],\n","       [0.0, 1.0, 0.0, 96, 1, 0, 'Dinner', 4],\n","       [0.0, 0.0, 0.0, 58, 0, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 86, 1, 0, 'Dinner', 5],\n","       [0.0, 1.0, 0.0, 5, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 7, 0, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 7, 1, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 60, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 12, 1, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 8, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 23, 0, 0, 'Lunch', 2],\n","       [0.0, 0.0, 0.0, 64, 0, 1, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 3, 1, 1, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 23, 0, 1, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 45, 1, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 23, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 45, 1, 1, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 59, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 24, 0, 1, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 52, 1, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 55, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 45, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 65, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 86, 1, 1, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 7, 1, 1, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 19, 1, 1, 'Lunch', 1],\n","       [0.0, 0.0, 1.0, 45, 1, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 20, 1, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 45, 1, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 99, 1, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 31, 0, 1, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 43, 0, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 71, 1, 0, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 32, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 53, 0, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 61, 1, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 58, 0, 0, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 23, 1, 1, 'Lunch', 2],\n","       [0.0, 0.0, 0.0, 10, 1, 1, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 73, 1, 1, 'Dinner', 4],\n","       [0.0, 1.0, 0.0, 81, 1, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 79, 1, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 34, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 23, 1, 1, 'Dinner', 4],\n","       [0.0, 1.0, 0.0, 74, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 101, 1, 0, 'Dinner', 4],\n","       [0.0, 1.0, 0.0, 74, 1, 1, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 23, 0, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 2, 0, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 23, 0, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 17, 1, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 27, 1, 0, 'Dinner', 3],\n","       [0.0, 0.0, 1.0, 94, 1, 0, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 42, 0, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 7, 0, 0, 'Dinner', 2],\n","       [0.0, 0.0, 1.0, 34, 0, 1, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 65, 1, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 0, 1, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 23, 1, 1, 'Dinner', 5],\n","       [0.0, 0.0, 1.0, 77, 0, 1, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 29, 1, 0, 'Lunch', 3],\n","       [1.0, 0.0, 0.0, 48, 0, 0, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 72, 0, 0, 'Dinner', 4],\n","       [1.0, 0.0, 0.0, 44, 0, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 13, 1, 0, 'Dinner', 3],\n","       [0.0, 1.0, 0.0, 91, 0, 0, 'Dinner', 4],\n","       [0.0, 0.0, 1.0, 23, 1, 0, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 7, 1, 0, 'Lunch', 2],\n","       [0.0, 1.0, 0.0, 23, 1, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 64, 0, 1, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 7, 1, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 87, 1, 0, 'Dinner', 4],\n","       [0.0, 0.0, 1.0, 74, 1, 0, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 23, 0, 1, 'Lunch', 2],\n","       [1.0, 0.0, 0.0, 30, 0, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 97, 0, 1, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 23, 1, 1, 'Dinner', 3],\n","       [0.0, 0.0, 1.0, 14, 0, 0, 'Lunch', 2],\n","       [0.0, 0.0, 1.0, 45, 0, 0, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 76, 1, 0, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 65, 0, 1, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 45, 0, 0, 'Dinner', 3],\n","       [1.0, 0.0, 0.0, 75, 1, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 46, 0, 0, 'Dinner', 2],\n","       [0.0, 0.0, 0.0, 0, 0, 1, 'Dinner', 2],\n","       [0.0, 1.0, 0.0, 67, 1, 1, 'Dinner', 2],\n","       [1.0, 0.0, 0.0, 34, 0, 1, 'Dinner', 3]], dtype=object)"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["import sys\n","import numpy as np\n","np.set_printoptions(threshold=sys.maxsize)\n","X_train = ct.fit_transform(X_train)"],"metadata":{"id":"TAiDbTi2Cbx0","executionInfo":{"status":"ok","timestamp":1718105476935,"user_tz":-330,"elapsed":4,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["X_test = ct.fit_transform(X_test)"],"metadata":{"id":"sAX4JSVLCb_p","executionInfo":{"status":"ok","timestamp":1718105481940,"user_tz":-330,"elapsed":6,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":46,"outputs":[]},{"source":["### SVR - Support vector Regressor\n","from sklearn.svm import SVR\n"],"cell_type":"code","metadata":{"id":"8tqjwe8BDd0P","executionInfo":{"status":"ok","timestamp":1718105529251,"user_tz":-330,"elapsed":16,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":47,"outputs":[]},{"source":["svr= SVR()"],"cell_type":"code","metadata":{"id":"t59p4BXODXVK","executionInfo":{"status":"ok","timestamp":1718105547795,"user_tz":-330,"elapsed":17,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["svr.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"csUYBiNBEiU-","executionInfo":{"status":"error","timestamp":1718105564461,"user_tz":-330,"elapsed":13,"user":{"displayName":"Siddula Mohan","userId":"01384610363826724560"}},"outputId":"b2f86248-e2cc-450d-cf48-46fcb27ceeb9"},"execution_count":49,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"could not convert string to float: 'Dinner'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-49-63c133500d78>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msvr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/svm/_base.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    190\u001b[0m             \u001b[0mcheck_consistent_length\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    191\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 192\u001b[0;31m             X, y = self._validate_data(\n\u001b[0m\u001b[1;32m    193\u001b[0m                 \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    194\u001b[0m                 \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36m_validate_data\u001b[0;34m(self, X, y, reset, validate_separately, **check_params)\u001b[0m\n\u001b[1;32m    582\u001b[0m                 \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_name\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"y\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_y_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    583\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 584\u001b[0;31m                 \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_X_y\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    585\u001b[0m             \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    586\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_X_y\u001b[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)\u001b[0m\n\u001b[1;32m   1104\u001b[0m         )\n\u001b[1;32m   1105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1106\u001b[0;31m     X = check_array(\n\u001b[0m\u001b[1;32m   1107\u001b[0m         \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1108\u001b[0m         \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maccept_sparse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_array\u001b[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)\u001b[0m\n\u001b[1;32m    877\u001b[0m                     \u001b[0marray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    878\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 879\u001b[0;31m                     \u001b[0marray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_asarray_with_order\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mxp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    880\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mComplexWarning\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mcomplex_warning\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    881\u001b[0m                 raise ValueError(\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/_array_api.py\u001b[0m in \u001b[0;36m_asarray_with_order\u001b[0;34m(array, dtype, order, copy, xp)\u001b[0m\n\u001b[1;32m    183\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"numpy\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"numpy.array_api\"\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    184\u001b[0m         \u001b[0;31m# Use NumPy API to support order\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 185\u001b[0;31m         \u001b[0marray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnumpy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    186\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    187\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'Dinner'"]}]},{"cell_type":"code","source":["y_pred = svr.predict(X_test)"],"metadata":{"id":"FmgcLkzQEiry"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error"],"metadata":{"id":"3d4ei1jWE2fN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(r2_score(y_test,y_pred))\n","print(mean_squared_error(y_test,y_pred))\n","print(mean_absolute_error(y_test,y_pred))"],"metadata":{"id":"ivvWZPnGFZ-K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## Hyper Parameter Tuning Using GridSearch Cv\n","\n","from sklearn.model_selection import GridSearchCV\n","\n","#defining parameters range\n","parameters = [{'kernel':['rbf'],\n","               'gamma':[1e-3,1e-4],\n","               'C':[1,10,100,1000]}]\n"],"metadata":{"id":"l8ZjWtqlFcnj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["parameters.best_params_"],"metadata":{"id":"x0iG0t_jFsKA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["parameters ="],"metadata":{"id":"Dyzxg-LFFz6s"},"execution_count":null,"outputs":[]}]}